var _user$project$HTTP$dropItem = _elm_lang$html$Html_Attributes$style(
	{
		ctor: '::',
		_0: {ctor: '_Tuple2', _0: 'color', _1: '#333'},
		_1: {
			ctor: '::',
			_0: {ctor: '_Tuple2', _0: 'padding', _1: '12px 16px'},
			_1: {
				ctor: '::',
				_0: {ctor: '_Tuple2', _0: 'text-decoration', _1: 'none'},
				_1: {
					ctor: '::',
					_0: {ctor: '_Tuple2', _0: 'display', _1: 'inline-block'},
					_1: {
						ctor: '::',
						_0: {ctor: '_Tuple2', _0: 'border', _1: '1px solid #aaa'},
						_1: {
							ctor: '::',
							_0: {ctor: '_Tuple2', _0: 'width', _1: '160px'},
							_1: {ctor: '[]'}
						}
					}
				}
			}
		}
	});
var _user$project$HTTP$dropBtn = _elm_lang$html$Html_Attributes$style(
	{
		ctor: '::',
		_0: {ctor: '_Tuple2', _0: 'background', _1: '4CAF50'},
		_1: {
			ctor: '::',
			_0: {ctor: '_Tuple2', _0: 'color', _1: 'white'},
			_1: {
				ctor: '::',
				_0: {ctor: '_Tuple2', _0: 'padding', _1: '16px'},
				_1: {
					ctor: '::',
					_0: {ctor: '_Tuple2', _0: 'border', _1: 'none'},
					_1: {
						ctor: '::',
						_0: {ctor: '_Tuple2', _0: 'cursor', _1: 'pointer'},
						_1: {
							ctor: '::',
							_0: {ctor: '_Tuple2', _0: 'width', _1: '160px'},
							_1: {
								ctor: '::',
								_0: {ctor: '_Tuple2', _0: 'box-sizing', _1: 'content-box'},
								_1: {
									ctor: '::',
									_0: {ctor: '_Tuple2', _0: 'border', _1: '1px solid #aaa'},
									_1: {ctor: '[]'}
								}
							}
						}
					}
				}
			}
		}
	});
var _user$project$HTTP$dropContainer = _elm_lang$html$Html_Attributes$style(
	{
		ctor: '::',
		_0: {ctor: '_Tuple2', _0: 'width', _1: '192px'},
		_1: {
			ctor: '::',
			_0: {ctor: '_Tuple2', _0: 'position', _1: 'absolute'},
			_1: {
				ctor: '::',
				_0: {ctor: '_Tuple2', _0: 'top', _1: '15px'},
				_1: {
					ctor: '::',
					_0: {ctor: '_Tuple2', _0: 'left', _1: '15px'},
					_1: {ctor: '[]'}
				}
			}
		}
	});
var _user$project$HTTP$gifStyle = _elm_lang$html$Html_Attributes$style(
	{
		ctor: '::',
		_0: {ctor: '_Tuple2', _0: 'max-width', _1: '600px'},
		_1: {
			ctor: '::',
			_0: {ctor: '_Tuple2', _0: 'max-height', _1: '400px'},
			_1: {ctor: '[]'}
		}
	});
var _user$project$HTTP$buttonStyle = _elm_lang$html$Html_Attributes$style(
	{
		ctor: '::',
		_0: {ctor: '_Tuple2', _0: 'margin', _1: '15px'},
		_1: {
			ctor: '::',
			_0: {ctor: '_Tuple2', _0: 'border-radius', _1: '0'},
			_1: {
				ctor: '::',
				_0: {ctor: '_Tuple2', _0: 'border', _1: '0'},
				_1: {
					ctor: '::',
					_0: {ctor: '_Tuple2', _0: 'padding', _1: '10px 14px'},
					_1: {ctor: '[]'}
				}
			}
		}
	});
var _user$project$HTTP$currentTopic = function (model) {
	return _elm_lang$core$Native_Utils.eq(model.topic, '') ? 'random' : model.topic;
};
var _user$project$HTTP$inputStyle = _elm_lang$html$Html_Attributes$style(
	{
		ctor: '::',
		_0: {ctor: '_Tuple2', _0: 'width', _1: '300px'},
		_1: {
			ctor: '::',
			_0: {ctor: '_Tuple2', _0: 'background', _1: 'white'},
			_1: {
				ctor: '::',
				_0: {ctor: '_Tuple2', _0: 'color', _1: '#333'},
				_1: {
					ctor: '::',
					_0: {ctor: '_Tuple2', _0: 'border', _1: '1px solid #333'},
					_1: {
						ctor: '::',
						_0: {ctor: '_Tuple2', _0: 'margin-top', _1: '15px'},
						_1: {
							ctor: '::',
							_0: {ctor: '_Tuple2', _0: 'padding', _1: '3px'},
							_1: {
								ctor: '::',
								_0: {ctor: '_Tuple2', _0: 'text-align', _1: 'center'},
								_1: {ctor: '[]'}
							}
						}
					}
				}
			}
		}
	});
var _user$project$HTTP$subscriptions = function (model) {
	return _elm_lang$core$Platform_Sub$none;
};
var _user$project$HTTP$decodeGifUrl = A2(
	_elm_lang$core$Json_Decode$at,
	{
		ctor: '::',
		_0: 'data',
		_1: {
			ctor: '::',
			_0: 'image_url',
			_1: {ctor: '[]'}
		}
	},
	_elm_lang$core$Json_Decode$string);
var _user$project$HTTP$Model = F4(
	function (a, b, c, d) {
		return {topic: a, gifUrl: b, message: c, showDropdown: d};
	});
var _user$project$HTTP$init = {
	ctor: '_Tuple2',
	_0: A4(_user$project$HTTP$Model, '', 'https://media3.giphy.com/media/PBKe1OLngZck0/giphy.gif', '', false),
	_1: _elm_lang$core$Platform_Cmd$none
};
var _user$project$HTTP$HideDropdown = {ctor: 'HideDropdown'};
var _user$project$HTTP$Topic4 = {ctor: 'Topic4'};
var _user$project$HTTP$Topic3 = {ctor: 'Topic3'};
var _user$project$HTTP$Topic2 = {ctor: 'Topic2'};
var _user$project$HTTP$Topic1 = {ctor: 'Topic1'};
var _user$project$HTTP$showDropdown = function (model) {
	var display = model.showDropdown ? 'flex' : 'none';
	return A2(
		_elm_lang$html$Html$div,
		{
			ctor: '::',
			_0: _elm_lang$html$Html_Attributes$style(
				{
					ctor: '::',
					_0: {ctor: '_Tuple2', _0: 'display', _1: display},
					_1: {
						ctor: '::',
						_0: {ctor: '_Tuple2', _0: 'flex-direction', _1: 'column'},
						_1: {
							ctor: '::',
							_0: {ctor: '_Tuple2', _0: 'margin', _1: 'auto'},
							_1: {ctor: '[]'}
						}
					}
				}),
			_1: {ctor: '[]'}
		},
		{
			ctor: '::',
			_0: A2(
				_elm_lang$html$Html$a,
				{
					ctor: '::',
					_0: _user$project$HTTP$dropItem,
					_1: {
						ctor: '::',
						_0: _elm_lang$html$Html_Events$onClick(_user$project$HTTP$Topic1),
						_1: {
							ctor: '::',
							_0: _elm_lang$html$Html_Attributes$href('#'),
							_1: {ctor: '[]'}
						}
					}
				},
				{
					ctor: '::',
					_0: _elm_lang$html$Html$text('Saoirse Ronan'),
					_1: {ctor: '[]'}
				}),
			_1: {
				ctor: '::',
				_0: A2(
					_elm_lang$html$Html$a,
					{
						ctor: '::',
						_0: _user$project$HTTP$dropItem,
						_1: {
							ctor: '::',
							_0: _elm_lang$html$Html_Events$onClick(_user$project$HTTP$Topic2),
							_1: {
								ctor: '::',
								_0: _elm_lang$html$Html_Attributes$href('#'),
								_1: {ctor: '[]'}
							}
						}
					},
					{
						ctor: '::',
						_0: _elm_lang$html$Html$text('Programming'),
						_1: {ctor: '[]'}
					}),
				_1: {
					ctor: '::',
					_0: A2(
						_elm_lang$html$Html$a,
						{
							ctor: '::',
							_0: _user$project$HTTP$dropItem,
							_1: {
								ctor: '::',
								_0: _elm_lang$html$Html_Events$onClick(_user$project$HTTP$Topic3),
								_1: {
									ctor: '::',
									_0: _elm_lang$html$Html_Attributes$href('#'),
									_1: {ctor: '[]'}
								}
							}
						},
						{
							ctor: '::',
							_0: _elm_lang$html$Html$text('Gaming'),
							_1: {ctor: '[]'}
						}),
					_1: {
						ctor: '::',
						_0: A2(
							_elm_lang$html$Html$a,
							{
								ctor: '::',
								_0: _user$project$HTTP$dropItem,
								_1: {
									ctor: '::',
									_0: _elm_lang$html$Html_Events$onClick(_user$project$HTTP$Topic4),
									_1: {
										ctor: '::',
										_0: _elm_lang$html$Html_Attributes$href('#'),
										_1: {ctor: '[]'}
									}
								}
							},
							{
								ctor: '::',
								_0: _elm_lang$html$Html$text('Sunrise'),
								_1: {ctor: '[]'}
							}),
						_1: {ctor: '[]'}
					}
				}
			}
		});
};
var _user$project$HTTP$ShowDropdown = {ctor: 'ShowDropdown'};
var _user$project$HTTP$Topic = function (a) {
	return {ctor: 'Topic', _0: a};
};
var _user$project$HTTP$NewGif = function (a) {
	return {ctor: 'NewGif', _0: a};
};
var _user$project$HTTP$getRandomGif = function (topic) {
	var url = A2(_elm_lang$core$Basics_ops['++'], 'https://api.giphy.com/v1/gifs/random?api_key=S4Owy81t3xC2ghtvSRk6Z3z7gqrhFdr3&tag=', topic);
	var request = A2(_elm_lang$http$Http$get, url, _user$project$HTTP$decodeGifUrl);
	return A2(_elm_lang$http$Http$send, _user$project$HTTP$NewGif, request);
};
var _user$project$HTTP$update = F2(
	function (msg, model) {
		var _p0 = msg;
		switch (_p0.ctor) {
			case 'Generate':
				return {
					ctor: '_Tuple2',
					_0: _elm_lang$core$Native_Utils.update(
						model,
						{showDropdown: false}),
					_1: _user$project$HTTP$getRandomGif(model.topic)
				};
			case 'NewGif':
				if (_p0._0.ctor === 'Ok') {
					return {
						ctor: '_Tuple2',
						_0: _elm_lang$core$Native_Utils.update(
							model,
							{gifUrl: _p0._0._0, message: ''}),
						_1: _elm_lang$core$Platform_Cmd$none
					};
				} else {
					return {
						ctor: '_Tuple2',
						_0: _elm_lang$core$Native_Utils.update(
							model,
							{message: 'No such topic'}),
						_1: _elm_lang$core$Platform_Cmd$none
					};
				}
			case 'Topic':
				return {
					ctor: '_Tuple2',
					_0: _elm_lang$core$Native_Utils.update(
						model,
						{topic: _p0._0}),
					_1: _elm_lang$core$Platform_Cmd$none
				};
			case 'ShowDropdown':
				return {
					ctor: '_Tuple2',
					_0: _elm_lang$core$Native_Utils.update(
						model,
						{showDropdown: true}),
					_1: _elm_lang$core$Platform_Cmd$none
				};
			case 'Topic1':
				return {
					ctor: '_Tuple2',
					_0: _elm_lang$core$Native_Utils.update(
						model,
						{topic: 'Saoirse Ronan', showDropdown: false}),
					_1: _user$project$HTTP$getRandomGif(model.topic)
				};
			case 'Topic2':
				return {
					ctor: '_Tuple2',
					_0: _elm_lang$core$Native_Utils.update(
						model,
						{topic: 'Programming', showDropdown: false}),
					_1: _user$project$HTTP$getRandomGif(model.topic)
				};
			case 'Topic3':
				return {
					ctor: '_Tuple2',
					_0: _elm_lang$core$Native_Utils.update(
						model,
						{topic: 'Gaming', showDropdown: false}),
					_1: _user$project$HTTP$getRandomGif(model.topic)
				};
			case 'Topic4':
				return {
					ctor: '_Tuple2',
					_0: _elm_lang$core$Native_Utils.update(
						model,
						{topic: 'Sunrise', showDropdown: false}),
					_1: _user$project$HTTP$getRandomGif(model.topic)
				};
			default:
				return {
					ctor: '_Tuple2',
					_0: _elm_lang$core$Native_Utils.update(
						model,
						{showDropdown: false}),
					_1: _elm_lang$core$Platform_Cmd$none
				};
		}
	});
var _user$project$HTTP$Generate = {ctor: 'Generate'};
var _user$project$HTTP$view = function (model) {
	return A2(
		_elm_lang$html$Html$div,
		{
			ctor: '::',
			_0: _elm_lang$html$Html_Attributes$style(
				{
					ctor: '::',
					_0: {ctor: '_Tuple2', _0: 'text-align', _1: 'center'},
					_1: {
						ctor: '::',
						_0: {ctor: '_Tuple2', _0: 'width', _1: '100%'},
						_1: {ctor: '[]'}
					}
				}),
			_1: {ctor: '[]'}
		},
		{
			ctor: '::',
			_0: A2(
				_elm_lang$html$Html$input,
				{
					ctor: '::',
					_0: _elm_lang$html$Html_Events$onInput(_user$project$HTTP$Topic),
					_1: {
						ctor: '::',
						_0: _elm_lang$html$Html_Attributes$placeholder('Choose a topic'),
						_1: {
							ctor: '::',
							_0: _user$project$HTTP$inputStyle,
							_1: {ctor: '[]'}
						}
					}
				},
				{
					ctor: '::',
					_0: _elm_lang$html$Html$text(model.topic),
					_1: {ctor: '[]'}
				}),
			_1: {
				ctor: '::',
				_0: A2(
					_elm_lang$html$Html$p,
					{
						ctor: '::',
						_0: _elm_lang$html$Html_Attributes$style(
							{
								ctor: '::',
								_0: {ctor: '_Tuple2', _0: 'margin-top', _1: '5px'},
								_1: {ctor: '[]'}
							}),
						_1: {ctor: '[]'}
					},
					{
						ctor: '::',
						_0: _elm_lang$html$Html$text(
							A2(
								_elm_lang$core$Basics_ops['++'],
								'Current topic: ',
								_user$project$HTTP$currentTopic(model))),
						_1: {ctor: '[]'}
					}),
				_1: {
					ctor: '::',
					_0: A2(
						_elm_lang$html$Html$button,
						{
							ctor: '::',
							_0: _elm_lang$html$Html_Events$onClick(_user$project$HTTP$Generate),
							_1: {
								ctor: '::',
								_0: _user$project$HTTP$buttonStyle,
								_1: {ctor: '[]'}
							}
						},
						{
							ctor: '::',
							_0: _elm_lang$html$Html$text('Random Gif'),
							_1: {ctor: '[]'}
						}),
					_1: {
						ctor: '::',
						_0: A2(
							_elm_lang$html$Html$br,
							{ctor: '[]'},
							{ctor: '[]'}),
						_1: {
							ctor: '::',
							_0: A2(
								_elm_lang$html$Html$img,
								{
									ctor: '::',
									_0: _elm_lang$html$Html_Attributes$src(model.gifUrl),
									_1: {
										ctor: '::',
										_0: _user$project$HTTP$gifStyle,
										_1: {ctor: '[]'}
									}
								},
								{ctor: '[]'}),
							_1: {
								ctor: '::',
								_0: A2(
									_elm_lang$html$Html$p,
									{
										ctor: '::',
										_0: _elm_lang$html$Html_Attributes$style(
											{
												ctor: '::',
												_0: {ctor: '_Tuple2', _0: 'color', _1: 'red'},
												_1: {ctor: '[]'}
											}),
										_1: {ctor: '[]'}
									},
									{
										ctor: '::',
										_0: _elm_lang$html$Html$text(model.message),
										_1: {ctor: '[]'}
									}),
								_1: {
									ctor: '::',
									_0: A2(
										_elm_lang$html$Html$div,
										{
											ctor: '::',
											_0: _elm_lang$html$Html_Events$onMouseOver(_user$project$HTTP$ShowDropdown),
											_1: {
												ctor: '::',
												_0: _elm_lang$html$Html_Events$onMouseOut(_user$project$HTTP$HideDropdown),
												_1: {
													ctor: '::',
													_0: _user$project$HTTP$dropContainer,
													_1: {ctor: '[]'}
												}
											}
										},
										{
											ctor: '::',
											_0: A2(
												_elm_lang$html$Html$button,
												{
													ctor: '::',
													_0: _user$project$HTTP$dropBtn,
													_1: {ctor: '[]'}
												},
												{
													ctor: '::',
													_0: _elm_lang$html$Html$text('Dropdown'),
													_1: {ctor: '[]'}
												}),
											_1: {
												ctor: '::',
												_0: _user$project$HTTP$showDropdown(model),
												_1: {ctor: '[]'}
											}
										}),
									_1: {ctor: '[]'}
								}
							}
						}
					}
				}
			}
		});
};
var _user$project$HTTP$main = _elm_lang$html$Html$program(
	{init: _user$project$HTTP$init, subscriptions: _user$project$HTTP$subscriptions, update: _user$project$HTTP$update, view: _user$project$HTTP$view})();
